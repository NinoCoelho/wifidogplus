#!/bin/sh /etc/rc.common
#QQ:183130227
#Url:http://bbs.scjxsw.com
#日期20140714

START=65

EXTRA_COMMANDS="status"
EXTRA_HELP="        status Print the status of the service"

white_url_load()
{
    echo "FirewallRuleSet whiteurl {" >> /etc/wifidog.conf

	url_ch=`echo $bmd_url | sed 's/,/ /g'`
	for x in $url_ch
	do
		echo "FirewallRule allow to $x" >> /etc/wifidog.conf
	done

	echo "}" >> /etc/wifidog.conf
}

config_load()
{
    rm -f /etc/wifidog.conf

    gateway_id=$(cat /sys/devices/virtual/net/eth0/address|tr a-z A-Z|sed -e 's#:##g')
    uci set wifidog.@wifidog[0].gateway_id=$gateway_id
    #gateway_id=$(uci get wifidog.@wifidog[0].gateway_id)

    gateway_interface=$(uci get wifidog.@wifidog[0].gateway_interface)
    gateway_eninterface=$(uci get wifidog.@wifidog[0].gateway_eninterface)
    gateway_hostname=$(uci get wifidog.@wifidog[0].gateway_hostname)
    gateway_httpport=$(uci get wifidog.@wifidog[0].gateway_httpport)
    gateway_path=$(uci get wifidog.@wifidog[0].gateway_path)
    gateway_connmax=$(uci get wifidog.@wifidog[0].gateway_connmax)
    ssl_enable=$(uci get wifidog.@wifidog[0].ssl_enable)
    check_interval=$(uci get wifidog.@wifidog[0].check_interval)
    client_timeout=$(uci get wifidog.@wifidog[0].client_timeout)
    sslport=$(uci get wifidog.@wifidog[0].sslport)
    deamo_enable=$(uci get wifidog.@wifidog[0].deamo_enable)
    gatewayport=$(uci get wifidog.@wifidog[0].gatewayport)
    myz_mac=$(uci get wifidog.@wifidog[0].myz_mac)
    bmd_url=$(uci get wifidog.@wifidog[0].bmd_url)
    appservhost=$(uci get wifidog.@wifidog[0].appservhost)
    appservport=$(uci get wifidog.@wifidog[0].appservport)
    appservpath=$(uci get wifidog.@wifidog[0].appservpath)
    thread_watchdog_timeout=$(uci get wifidog.@wifidog[0].thread_watchdog_timeout)
    auto_ssid=$(uci get wifidog.@wifidog[0].auto_ssid)
    auto_password=$(uci get wifidog.@wifidog[0].auto_password)
    auto_wireless_pw=$(uci get wifidog.@wifidog[0].auto_wireless_pw)
    qos_enable=$(uci get wifidog.@wifidog[0].qos_enable)
    uplink_vip=$(uci get wifidog.@wifidog[0].uplink_vip)
    downlink_vip=$(uci get wifidog.@wifidog[0].downlink_vip)
    uplink_common=$(uci get wifidog.@wifidog[0].uplink_common)
    downlink_common=$(uci get wifidog.@wifidog[0].downlink_common)
    wd_auth_mode=$(uci get wifidog.@wifidog[0].auth_mode)
    wd_wechat_officialAccount=$(uci get wifidog.@wifidog[0].wechat_officialAccount)
    wd_wechat_shopId=$(uci get wifidog.@wifidog[0].wechat_shopId)
    wd_wechat_appId=$(uci get wifidog.@wifidog[0].wechat_appId)
    wd_wechat_secretKey=$(uci get wifidog.@wifidog[0].wechat_secretKey)
    wd_wechat_extend=$(uci get wifidog.@wifidog[0].wechat_extend)
    wd_wechat_forceAttention=$(uci get wifidog.@wifidog[0].wechat_forceAttention)
    wd_to_url=$(uci get wifidog.@wifidog[0].to_url)
    wd_skip_SuccessPage=$(uci get wifidog.@wifidog[0].skip_SuccessPage)
    wd_reAssoc_reAuth=$(uci get wifidog.@wifidog[0].reAssoc_reAuth)
    proxyport=$(uci get wifidog.@wifidog[0].proxyport)
    audit_enable=$(uci get wifidog.@wifidog[0].audit_enable)

echo "
GatewayID $gateway_id
GatewayInterface $gateway_interface
ExternalInterface $gateway_eninterface
AuthServer {
	Hostname $gateway_hostname
	SSLAvailable $ssl_enable
	SSLPort $sslport
	HTTPPort $gateway_httpport
	Path $gateway_path
}
AppServer {
    appservhost $appservhost
    appservport $appservport
    appservpath $appservpath
}
Daemon $deamo_enable
GatewayPort $gatewayport
CheckInterval $check_interval
ClientTimeout $client_timeout
HTTPDMaxConn $gateway_connmax
TrustedMACList $myz_mac
Thread_watchdog_timeout $thread_watchdog_timeout
Auto_ssid $auto_ssid
Auto_password $auto_password
Auto_wireless_pw $auto_wireless_pw
Qos_enable $qos_enable
Uplink_vip $uplink_vip
Downlink_vip $downlink_vip
Uplink_common $uplink_common
Downlink_common $downlink_common
Wd_auth_mode $wd_auth_mode
Wd_wechat_officialAccount $wd_wechat_officialAccount
Wd_wechat_shopId $wd_wechat_shopId
Wd_wechat_appId $wd_wechat_appId
Wd_wechat_secretKey $wd_wechat_secretKey
Wd_wechat_extend $wd_wechat_extend
Wd_wechat_forceAttention $wd_wechat_forceAttention
Wd_to_url $wd_to_url
Wd_skip_SuccessPage $wd_skip_SuccessPage
Wd_reAssoc_reAuth $wd_reAssoc_reAuth
proxyport $proxyport
audit_enable $audit_enable

FirewallRuleSet global {
    FirewallRule allow to 168.95.1.1
    FirewallRule allow to 210.106.0.20
    FirewallRule allow to 114.114.114.114
}

FirewallRuleSet validating-users {
    FirewallRule allow to 0.0.0.0/0
}

FirewallRuleSet known-users {
    FirewallRule allow to 0.0.0.0/0
}

FirewallRuleSet unknown-users {
    FirewallRule allow udp port 53
    FirewallRule allow tcp port 53
    FirewallRule allow udp port 67
    FirewallRule allow tcp port 67
}

FirewallRuleSet locked-users {
    FirewallRule block to 0.0.0.0/0
}
" >> /etc/wifidog.conf

    white_url_load
}

separate_wired() {
    separate_wired=$(uci get wifidog.@wifidog[0].separate_wired)
    if [ "$separate_wired" = '1' ]; then
	    wd_separate_wired.sh
	fi
}

start() {
	config_load
	/usr/bin/wifidog-init start
	separate_wired
}

stop() {
	/usr/bin/wifidog-init stop
}

status() {
	/usr/bin/wifidog-init status
}

restart() {
        /usr/bin/wifidog-init stop
        sleep 4
        config_load
        /usr/bin/wifidog-init start
        separate_wired
}

reload() {
        /usr/bin/wifidog-init stop
        sleep 4
        config_load
        /usr/bin/wifidog-init start
        separate_wired
}

